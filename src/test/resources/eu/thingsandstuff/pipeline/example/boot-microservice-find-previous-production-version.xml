<?xml version="1.0" encoding="UTF-8"?>
<project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <se.diabol.jenkins.pipeline.PipelineProperty>
      <taskName>Find previous production version</taskName>
      <stageName>Run smoke &amp; rollback tests</stageName>
    </se.diabol.jenkins.pipeline.PipelineProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.groovy.SystemGroovy>
      <bindings/>
      <classpath/>
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>
out.println("This is just a dummy placeholder for 'Find previous production version' job.")
out.println("Will terminate in 2 seconds.")
Thread.sleep(2 * 1000)
</command>
      </scriptSource>
    </hudson.plugins.groovy.SystemGroovy>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger>
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <projects>boot-microservice-smoke-test-previous</projects>
          <condition>UNSTABLE_OR_BETTER</condition>
          <triggerWithNoParameters>true</triggerWithNoParameters>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>PREV_APP_VERSION=${PREV_APP_VERSION}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <hudson.plugins.parameterizedtrigger.NodeParameters/>
          </configs>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <se.diabol.jenkins.pipeline.PipelineVersionContributor>
      <versionTemplate>${ENV,var="PIPELINE_VERSION"}</versionTemplate>
      <updateDisplayName>true</updateDisplayName>
    </se.diabol.jenkins.pipeline.PipelineVersionContributor>
  </buildWrappers>
</project>
